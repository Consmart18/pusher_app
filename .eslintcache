[{"C:\\Users\\user\\polling_app\\src\\index.js":"1","C:\\Users\\user\\polling_app\\src\\reportWebVitals.js":"2","C:\\Users\\user\\polling_app\\src\\App.js":"3","C:\\Users\\user\\polling_app\\src\\userComponents\\modal\\index.js":"4","C:\\Users\\user\\polling_app\\src\\userComponents\\state\\index.js":"5","C:\\Users\\user\\polling_app\\src\\userComponents\\states\\index.js":"6","C:\\Users\\user\\polling_app\\src\\userComponents\\states\\states.js":"7","C:\\Users\\user\\polling_app\\src\\userComponents\\header\\nav\\nav.js":"8","C:\\Users\\user\\polling_app\\src\\userComponents\\header\\nav\\navlinks.js":"9","C:\\Users\\user\\polling_app\\src\\userComponents\\footer\\footer.js":"10","C:\\Users\\user\\polling_app\\src\\userComponents\\footer\\allregions.js":"11"},{"size":500,"mtime":1608049692258,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1608049692258,"results":"14","hashOfConfig":"13"},{"size":3225,"mtime":1610318921783,"results":"15","hashOfConfig":"13"},{"size":1089,"mtime":1610288096595,"results":"16","hashOfConfig":"13"},{"size":967,"mtime":1610286559921,"results":"17","hashOfConfig":"13"},{"size":489,"mtime":1609224542032,"results":"18","hashOfConfig":"13"},{"size":473,"mtime":1609347322363,"results":"19","hashOfConfig":"13"},{"size":540,"mtime":1610285769334,"results":"20","hashOfConfig":"13"},{"size":59,"mtime":1609268302755,"results":"21","hashOfConfig":"13"},{"size":516,"mtime":1609271091092,"results":"22","hashOfConfig":"13"},{"size":166,"mtime":1610286184497,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1kglg84",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\user\\polling_app\\src\\index.js",[],["49","50"],"C:\\Users\\user\\polling_app\\src\\reportWebVitals.js",[],"C:\\Users\\user\\polling_app\\src\\App.js",["51"],"import {useState, useEffect} from \"react\"\nimport States from \"./userComponents/states/index\"\nimport * as PusherPushNotifications from \"@pusher/push-notifications-web\"\nimport Pusher from 'pusher-js';\nimport Nav from \"./userComponents/header/nav/nav\";\nimport Footer from \"./userComponents/footer/footer\";\n\nfunction App() {\n  const sampleData = [\n    [ 1, 'Alabama', 0, 0, 0, 0, 0, 0, 0, 0, 'inprogress' ],\n    [ 1, 'Delaware', 0, 0, 0, 0, 0, 0, 0, 0, 'inprogress' ],\n    [ 1, 'Florida', 0, 0, 0, 0, 0, 0, 0, 0, 'inprogress' ],\n    [ 1, 'Hawaii', 0, 0, 0, 0, 0, 0, 0, 0, 'inprogress' ],\n    [ 1, 'Idaho', 0, 0, 0, 0, 0, 0, 0, 0, 'inprogress' ],\n    [ 1, 'Kentucky', 0, 0, 0, 0, 0, 0, 0, 0, 'inprogress' ]\n  ]\n  const [data, updateData] = useState(sampleData)\n  const [total, updateTotal] = useState({message: sampleData[0]})\n  const [subStatus, updateSubStatus] = useState(\"subscribe\")\n\n  const pusher = new Pusher(\"b691171de5f8ac605664\", {\n    cluster: \"mt1\"//process.env.REACT_APP_CLUSTER\n  });\n  console.log(pusher.channel(\"my-channel\"))\n  const channel = pusher.subscribe('my-channel');\n  \n  channel.bind('client-voteevent', function(dataFromServer) {\n    updateData(data =>{\n      // console.log(data.message)\n      // console.log({message: data.message.splice(Number(dataFromServer.message[11]), 1, dataFromServer.message)}, \"kkkkkkkkkkkkk\")\n      // const arr = [...dat\n      data.splice(Number(dataFromServer.message[11]), 1, dataFromServer.message)\n      const arr = [...data]\n      return arr\n    }\n    )\n   \n    updateTotal(dataFromServer)\n    \n    \n  });\n  useEffect(async ()=>{\n    const res = await fetch(\"http://localhost:3001\")//https://cryptic-lake-12063.herokuapp.com/\n    const json = await res.json()\n    updateTotal(json)\n    updateData(data =>{\n      data.splice(Number(json.message[11]), 1, json.message)\n      const arr = [...data]\n      return arr\n    }\n    )\n  }, [])\n  const beamsClient = new PusherPushNotifications.Client({\n    instanceId: \"6e70a6a0-a057-4c9d-b88d-95963f7fe209\",\n  })\n\n  beamsClient.start()\n  .then(() => beamsClient.getDeviceId())\n  .then(deviceId => {\n    console.log(deviceId) // Will log something like web-1234-1234-1234-1234\n  }).catch(e => console.error('Could not get device id', e));\n \n  function sub(){\n    if(subStatus === \"unsubscribe\"){\n      beamsClient.start()\n      .then(() => beamsClient.removeDeviceInterest('hello'))\n      .then(() => {\n        // Build something beatiful ðŸŒˆ\n        alert(\"You will not be notified when voting is completed\")\n        updateSubStatus(\"subscribe\")\n      });\n    }\n    beamsClient.start()\n    .then(() => beamsClient.addDeviceInterest('vote-event'))\n    .then(() => {\n      // Build something beatiful ðŸŒˆ\n      alert(\"You will notified when voting is completed\")\n      updateSubStatus(\"unsubscribe\")\n    });\n  }\n\n  return (\n    <div>\n      <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", backgroundColor:\"#8731D2\"}}><Nav /><button onClick={()=> sub()} style={{height:\"30px\", margin: 15}}>{subStatus}</button></div>\n      <div style={{display:\"flex\", justifyContent:\"space-around\"}}><States total={total} data={data} /></div>\n      <div><Footer/></div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\polling_app\\src\\userComponents\\modal\\index.js",["52","53"],"import { useState } from \"react\";\r\nexport default function Modal(props){\r\n    // const x = props.status\r\n    const regions = [['regx', [0]], ['regx', [0]]]\r\n    // const [reg, updateReg] = useState(props.regions) // region\r\n    console.log(props.regions)\r\n    return (\r\n        <main style={{position:\"fixed\", display: props.display, zIndex:2, backgroundColor:\"#300D4F\", opacity:0.95, color:\"white\", width:\"60%\", height: \"50%\", top:\"15%\",left:\"20%\", border:\"1px black solid\", borderRadius:\"5px\"}}>\r\n               <p className=\"\" style={{float:\"right\", color:\"white\"}} onClick={()=> props.setDisplay(\"none\")}>X</p>\r\n               <table style={{textAlign:\"center\", width:\"100%\"}}>\r\n  <thead style={{color: \"#2AE9AA\", fontSize:\"19px\"}}>\r\n    <tr>\r\n      <th>Region Name</th>\r\n      <th>Votes</th>\r\n      <th>Status</th>\r\n\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {props.regions.map((region)=>{\r\n        return <tr>\r\n        <td>{region[1]}</td>\r\n        <td>{region[props.index + 2]}</td>\r\n        <td>{region[10]}</td>\r\n      </tr>\r\n    })}\r\n  </tbody> \r\n</table>\r\n        </main>\r\n    )\r\n}","C:\\Users\\user\\polling_app\\src\\userComponents\\state\\index.js",[],"C:\\Users\\user\\polling_app\\src\\userComponents\\states\\index.js",[],"C:\\Users\\user\\polling_app\\src\\userComponents\\states\\states.js",[],"C:\\Users\\user\\polling_app\\src\\userComponents\\header\\nav\\nav.js",[],"C:\\Users\\user\\polling_app\\src\\userComponents\\header\\nav\\navlinks.js",[],"C:\\Users\\user\\polling_app\\src\\userComponents\\footer\\footer.js",[],"C:\\Users\\user\\polling_app\\src\\userComponents\\footer\\allregions.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":42,"column":13,"nodeType":"60","endLine":52,"endColumn":4},{"ruleId":"61","severity":1,"message":"62","line":1,"column":10,"nodeType":"63","messageId":"64","endLine":1,"endColumn":18},{"ruleId":"61","severity":1,"message":"65","line":4,"column":11,"nodeType":"63","messageId":"64","endLine":4,"endColumn":18},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'regions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]